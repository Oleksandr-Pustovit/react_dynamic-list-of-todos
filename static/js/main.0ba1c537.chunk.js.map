{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","onTodoSelect","className","map","todo","id","completed","title","type","onClick","TodoFilter","changeFilters","useState","querry","setQuerry","status","setStatus","useEffect","filter","toLowerCase","includes","value","onChange","event","target","handleStatusChange","defaultChecked","placeholder","handleQuerryChange","length","style","pointerEvents","Loader","TodoModal","onClose","user","setUser","userId","href","email","name","App","setTodos","setSelectedTodo","visibleTodos","setVisibleTodos","isDownloadComplete","setIsDownloadComplete","listOftodos","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ba1c537.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onTodoSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far + ${(selectedTodo?.id === todo.id\n                    ? 'fa-eye-slash'\n                    : 'fa-eye'\n                  )}`}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  changeFilters: (filteredTodos: Todo[]) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const TodoFilter: React.FC<Props> = ({ todos, changeFilters }) => {\n  const [querry, setQuerry] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    changeFilters(todos\n      .filter(todo => todo\n        .title\n        .toLowerCase()\n        .includes(querry.toLowerCase()))\n      .filter(todo => {\n        switch (status) {\n          case 'all':\n            return true;\n\n          case 'completed':\n            return todo.completed;\n\n          case 'active':\n            return !todo.completed;\n\n          default:\n            return true;\n        }\n      }));\n  }, [querry, status]);\n\n  const handleQuerryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuerry(event.target.value);\n  };\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={event => handleStatusChange(event)}\n          >\n            <option value=\"all\" defaultChecked>All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={querry}\n          onChange={event => handleQuerryChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {querry.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuerry('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isDownloadComplete, setIsDownloadComplete] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(listOftodos => {\n        setTodos(listOftodos);\n        setVisibleTodos(listOftodos);\n      })\n      .then(() => setIsDownloadComplete(true));\n  }, []);\n\n  const handleUserSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const getVisibleGoods = (filteredTodos: Todo[]) => {\n    setVisibleTodos(filteredTodos);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                changeFilters={getVisibleGoods}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  onTodoSelect={handleUserSelect}\n                />\n              ) : (\n                <>\n                  {isDownloadComplete ? (\n                    <>\n                      <h1 className=\"is-vcentered\">\n                        No todos fulfilling your request\n                      </h1>\n                    </>\n                  ) : (\n                    <Loader />\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            onClose={handleModalClose}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}